{"version":3,"sources":["index.js"],"names":["Calculator","props","state","weight","height","bmi","age","this","calcBmi","Math","pow","roundBmi","round","setState","event","heightValue","target","value","setBMI","weightValue","ageValue","category","getCat","className","id","type","onChange","setHeight","bind","htmlFor","data-error","setWeight","setAge","result","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mNAOMA,G,oCACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,EACTC,QAAS,EACTC,KAAM,EACNC,KAAM,GANK,E,sEAWf,IAAMH,EAASI,KAAKL,MAAMC,OACpBC,EAASG,KAAKL,MAAME,OAAS,IAC7BE,EAAMC,KAAKL,MAAMI,IACvB,GAAIH,GAAU,GAAKC,GAAU,KAAQE,GAAO,EAAG,CAC3C,IAAIE,EAAWL,EAASM,KAAKC,IAAIN,EAAQ,GACrCO,EAAWF,KAAKG,MAAgB,IAAVJ,GAAiB,IAC3CD,KAAKM,SAAS,CACVR,IAAKM,SAGTJ,KAAKM,SAAS,CACVR,KAAM,M,gCAKRS,GAAQ,IAAD,OACPC,EAAcD,EAAME,OAAOC,MACjCV,KAAKM,SAAU,CACXT,OAAQW,IACT,WACC,EAAKG,c,gCAIHJ,GAAQ,IAAD,OACPK,EAAcL,EAAME,OAAOC,MACjCV,KAAKM,SAAU,CACXV,OAAQgB,IACT,WACC,EAAKD,c,6BAINJ,GAAQ,IAAD,OACJM,EAAWN,EAAME,OAAOC,MAC9BV,KAAKM,SAAS,CACVP,IAAKc,IACN,WACC,EAAKF,c,6BAINb,GACH,OAAIA,GAAO,GACA,0BACAA,GAAO,KACP,cACAA,GAAO,GACP,gBACAA,GAAO,GACP,aACAA,GAAO,GACP,QACAA,GAAO,GACP,iBACAA,GAAO,KACP,yBADJ,I,+BAMP,IAAMgB,EAAWd,KAAKe,OAAOf,KAAKL,MAAMG,KAElCD,EACF,yBAAKmB,UAAU,sBACX,2BAAOC,GAAG,SAASC,KAAK,SAASF,UAAU,sBAAsBG,SAAUnB,KAAKoB,UAAUC,KAAKrB,QAC/F,2BAAOsB,QAAQ,UAAf,eACA,0BAAMN,UAAU,cAAcO,aAAW,qBAG3C3B,EACF,yBAAKoB,UAAU,sBACX,2BAAOC,GAAG,SAASC,KAAK,SAASF,UAAU,sBAAsBG,SAAUnB,KAAKwB,UAAUH,KAAKrB,QAC/F,2BAAOsB,QAAQ,UAAf,eACA,0BAAMN,UAAU,cAAcO,aAAW,qBAG3CxB,EACF,yBAAKiB,UAAU,gCACX,2BAAOC,GAAG,MAAMC,KAAK,SAASF,UAAU,sBAAsBG,SAAUnB,KAAKyB,OAAOJ,KAAKrB,QACzF,2BAAOsB,QAAQ,OAAf,OACA,0BAAMN,UAAU,cAAcO,aAAW,qBAG7CG,EAAS,yBAAKV,UAAU,QAmB5B,OAhBIU,GADoB,IAApB1B,KAAKL,MAAMG,IACF,yBAAKkB,UAAU,QACjBhB,KAAKL,MAAMI,IAAM,IAAMC,KAAKL,MAAMI,IAAM,GAE/C,yBAAKiB,UAAU,OACX,yBAAKA,UAAU,+BAAf,qDAIA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BAAf,YACA,yBAAKA,UAAU,8BAA8BhB,KAAKL,MAAMG,KACxD,yBAAKkB,UAAU,6BAA6BF,IAMpD,yBAAKE,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,2BACX,0BAAMA,UAAU,kCAAhB,kBACA,yBAAKA,UAAU,OACVjB,GAEL,yBAAKiB,UAAU,OACVnB,EACAD,GAEJ8B,W,GAlIRC,IAAMC,YA4I/BC,IAASC,OAAO,kBAACrC,EAAD,MAAgBsC,SAASC,eAAe,U","file":"static/js/main.29f1bc77.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"../node_modules/materialize-css/dist/css/materialize.min.css\";\nimport \"../node_modules/materialize-css/dist/js/materialize.min.js\";\nimport \"react-materialize\";\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: -1,\n            height: -1,\n            bmi: -1,\n            age: -1,\n        };\n    }\n\n    setBMI() {\n        const weight = this.state.weight;\n        const height = this.state.height / 100;\n        const age = this.state.age;\n        if (weight >= 1 && height >= 0.01 && age >= 1) {\n            let calcBmi = (weight / Math.pow(height, 2));\n            let roundBmi = Math.round(calcBmi * 100) / 100;\n            this.setState({\n                bmi: roundBmi,\n            });\n        } else {\n            this.setState({\n                bmi: -1,\n            });\n        }\n    }\n\n    setHeight(event) {\n        const heightValue = event.target.value;\n        this.setState ({\n            height: heightValue,\n        }, () => {\n            this.setBMI();\n        });\n    }\n\n    setWeight(event) {\n        const weightValue = event.target.value;\n        this.setState ({\n            weight: weightValue,\n        }, () => {\n            this.setBMI();\n        });\n    }\n\n    setAge(event) {\n        const ageValue = event.target.value;\n        this.setState({\n            age: ageValue,\n        }, () => {\n            this.setBMI();\n        });\n    }\n\n    getCat(bmi) {\n        if (bmi <= 16) {\n            return \"Dangerously underweight\";\n        } else if (bmi <= 18.5) {\n            return \"Underweight\";\n        } else if (bmi <= 25) {\n            return \"Normal weight\";\n        } else if (bmi <= 30) {\n            return \"Overweight\";\n        } else if (bmi <= 35) {\n            return \"Obese\";\n        } else if (bmi <= 40) {\n            return \"Strongly obese\";\n        } else if (bmi >= 40.1) {\n            return \"Dangerously obese\";\n        }\n    }\n\n    render() {\n        const category = this.getCat(this.state.bmi);\n\n        const height = \n            <div className=\"input-field col s6\">\n                <input id=\"Height\" type=\"number\" className=\"validate white-text\" onChange={this.setHeight.bind(this)}></input>\n                <label htmlFor=\"Height\">Height (cm)</label>\n                <span className=\"helper-text\" data-error=\"Enter a number!\"></span>\n            </div>\n        \n        const weight = \n            <div className=\"input-field col s6\">\n                <input id=\"Weight\" type=\"number\" className=\"validate white-text\" onChange={this.setWeight.bind(this)}></input>\n                <label htmlFor=\"Weight\">Weight (kg)</label>\n                <span className=\"helper-text\" data-error=\"Enter a number!\"></span>\n            </div>\n\n        const age = \n            <div className=\"input-field col s6 offset-s3\">\n                <input id=\"Age\" type=\"number\" className=\"validate white-text\" onChange={this.setAge.bind(this)}></input>\n                <label htmlFor=\"Age\">Age</label>\n                <span className=\"helper-text\" data-error=\"Enter a number!\"></span>\n            </div>\n\n        var result = <div className=\"row\"></div>;\n\n        if (this.state.bmi === -1) {\n            result = <div className=\"row\"></div>\n        } else if (this.state.age > 60 || this.state.age < 20) {\n            result =\n            <div className=\"row\">\n                <div className=\"result-warning center-align\">Age too low or high. Results will be inaccurate.</div>\n            </div>\n        } else {\n            result =\n                <div className=\"row\">\n                    <div className=\"result-label center-align\">Your BMI</div>\n                    <div className=\"result-number center-align\">{this.state.bmi}</div>\n                    <div className=\"result-label center-align\">{category}</div>\n                </div>\n        }\n\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <div className=\"card cardGray\">\n                            <div className=\"card-content white-text\">\n                                <span className=\"card-title center-align center\">BMI Calculator</span>\n                                <div className=\"row\">\n                                    {age}\n                                </div>\n                                <div className=\"row\">\n                                    {height}\n                                    {weight}\n                                </div>\n                                {result}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}